{"version":3,"sources":["components/Form.js","components/Filter.js","components/Todo.js","App.js","index.js"],"names":["id","Form","props","useState","enteredTask","setEnteredTask","className","onSubmit","e","preventDefault","task","onSaveTaskData","htmlFor","value","type","autoComplete","onChange","event","target","Filter","isPressed","onClick","setFilter","name","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FILTER_MAP","All","Active","Completed","FILTER_NAMES","Object","keys","App","tasks","setTask","filter","editedTaskList","map","remainingTasks","updatedTasks","filterList","enteredTaskData","prevTasks","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faa3e130.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nlet id = 4;\nfunction Form(props) {\n  const [enteredTask, setEnteredTask] = useState(\"\");\n  const taskHandler = (event) => {\n    setEnteredTask(event.target.value);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const task = {\n      id: `t${++id}`,\n      task: enteredTask,\n    };\n    props.onSaveTaskData(task);\n    setEnteredTask(\"\");\n  };\n  return (\n    <div>\n      <div className=\"row\">\n        <h1 className=\"col-12 text-center\">Todo</h1>\n      </div>\n      <form onSubmit={submitHandler}>\n        <div className=\"row\">\n          <label htmlFor=\"new-todo-input\" className=\"col\">\n            <h2 className=\"text-center\">What need's to be done?</h2>\n          </label>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <input\n              value={enteredTask}\n              className=\"form-control\"\n              type=\"text\"\n              id=\"new-todo-input\"\n              autoComplete=\"off\"\n              onChange={taskHandler}\n            />\n          </div>\n        </div>\n        <div>\n          <button className=\"btn btn-dark form-control mt-2\" type=\"submit\">\n            Add\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nfunction Filter(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-outline-secondary form-control\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      {props.name}\n    </button>\n  );\n}\n\nexport default Filter;\n","import React, { useState } from \"react\";\n\nfunction Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor={props.id}>New name for {props.task}</label>\n          <input\n            id={props.id}\n            className=\"form-control\"\n            type=\"text\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"row d-flex justify-content-around mt-3\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger form-control col-4\"\n            onClick={() => setEditing(false)}\n          >\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary form-control col-4\">\n            Save\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n  const viewTemplate = (\n    <div className=\"container\">\n      <div className=\"row d-flex justify-content-start mb-2 mt-2\">\n        <input\n          className=\"form-control col-2\"\n          type=\"checkbox\"\n          id=\"todo-0\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"col-1 align-middle vert\" htmlFor=\"todo-0\">\n          {props.task}\n        </label>\n      </div>\n      <div className=\"row d-flex justify-content-around mt-3\">\n        <button\n          className=\"btn btn-outline-dark form-control col-4\"\n          type=\"button\"\n          onClick={() => setEditing(true)}\n        >\n          Edit\n        </button>\n        <button\n          className=\"btn btn-danger form-control col-4 \"\n          type=\"button\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <li className=\"mb-3 mt-3\">{isEditing ? editingTemplate : viewTemplate}</li>\n  );\n}\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport Todo from \"./components/Todo\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTask] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  const taskDataHandler = (enteredTaskData) => {\n    setTask((prevTasks) => {\n      return [enteredTaskData, ...prevTasks];\n    });\n  };\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, task: newName };\n      }\n      return task;\n    });\n    setTask(editedTaskList);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTask(remainingTasks);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n\n      return task;\n    });\n    setTask(updatedTasks);\n  }\n  const filterList = FILTER_NAMES.map((name) => (\n    <Filter\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  return (\n    <div className=\"container app\">\n      <Form onSaveTaskData={taskDataHandler}></Form>\n      <div className=\"container\">\n        <div className=\"container\">\n          <div className=\"row mt-2 \">{filterList}</div>\n        </div>\n      </div>\n\n      <h2 className=\"mt-2\">{tasks.length} tasks remaining</h2>\n      <ul className=\"list-unstyled\">\n        {tasks.filter(FILTER_MAP[filter]).map((task) => (\n          <Todo\n            key={task.id}\n            id={task.id}\n            task={task.task}\n            completed={task.completed}\n            toggleTaskCompleted={toggleTaskCompleted}\n            deleteTask={deleteTask}\n            editTask={editTask}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import $ from \"jquery\";\n// import Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./index.css\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst DUMMYTASKS = [\n  {\n    id: \"t1\",\n    task: \"Eat\",\n    completed: true,\n  },\n  {\n    id: \"t2\",\n    task: \"Sleep\",\n    completed: false,\n  },\n  {\n    id: \"t3\",\n    task: \"Code\",\n    completed: false,\n  },\n  {\n    id: \"t4\",\n    task: \"Repeat\",\n    completed: false,\n  },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DUMMYTASKS} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}