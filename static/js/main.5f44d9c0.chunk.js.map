{"version":3,"sources":["components/Form.js","components/Filter.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","enteredTask","setEnteredTask","className","onSubmit","e","preventDefault","onSaveTaskData","htmlFor","value","type","id","autoComplete","onChange","event","target","Filter","isPressed","onClick","setFilter","name","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","task","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FILTER_MAP","All","Active","Completed","FILTER_NAMES","Object","keys","App","tasks","setTask","filter","editedTaskList","map","remainingTasks","updatedTasks","filterList","tasksNoun","length","taskList","newTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f44d9c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nfunction Form(props) {\n  const [enteredTask, setEnteredTask] = useState(\"\");\n  const taskHandler = (event) => {\n    setEnteredTask(event.target.value);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    props.onSaveTaskData(enteredTask);\n    setEnteredTask(\"\");\n  };\n  return (\n    <div>\n      <div className=\"row\">\n        <h1 className=\"col-12 text-center\">Todo</h1>\n      </div>\n      <form onSubmit={submitHandler}>\n        <div className=\"row\">\n          <label htmlFor=\"new-todo-input\" className=\"col\">\n            <h2 className=\"text-center\">What need's to be done?</h2>\n          </label>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <input\n              value={enteredTask}\n              className=\"form-control\"\n              type=\"text\"\n              id=\"new-todo-input\"\n              autoComplete=\"off\"\n              onChange={taskHandler}\n            />\n          </div>\n        </div>\n        <div>\n          <button className=\"btn btn-dark form-control mt-2\" type=\"submit\">\n            Add\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nfunction Filter(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-outline-secondary form-control col-3 overflow-hidden filter\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      {props.name}\n    </button>\n  );\n}\n\nexport default Filter;\n","import React, { useState } from \"react\";\n\nfunction Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor={props.id}>New name for {props.task}</label>\n          <input\n            id={props.id}\n            className=\"form-control\"\n            type=\"text\"\n            onChange={handleChange}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"row d-flex justify-content-around mt-3\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger form-control col-4\"\n            onClick={() => setEditing(false)}\n          >\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary form-control col-4\">\n            Save\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n  const viewTemplate = (\n    <div className=\"container\">\n      <div className=\"row d-flex justify-content-start mb-2 mt-2\">\n        <input\n          className=\"form-control col-2\"\n          type=\"checkbox\"\n          id=\"todo-0\"\n          defaultChecked={props.completed}\n          autoComplete=\"off\"\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"col align-middle vert\" htmlFor=\"todo-0\">\n          {props.task}\n        </label>\n      </div>\n      <div className=\"row d-flex justify-content-around mt-3\">\n        <button\n          className=\"btn btn-outline-dark form-control col-4\"\n          type=\"button\"\n          onClick={() => setEditing(true)}\n        >\n          Edit\n        </button>\n        <button\n          className=\"btn btn-danger form-control col-4 \"\n          type=\"button\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <li className=\"mb-3 mt-3\">{isEditing ? editingTemplate : viewTemplate}</li>\n  );\n}\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport Todo from \"./components/Todo\";\nlet id = 4;\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTask] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  function addTask(name) {\n    const newTask = { id: `t${++id}`, task: name, completed: false };\n    setTask([newTask, ...tasks]);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, task: newName };\n      }\n      return task;\n    });\n    setTask(editedTaskList);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTask(remainingTasks);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n\n      return task;\n    });\n    setTask(updatedTasks);\n  }\n  const filterList = FILTER_NAMES.map((name) => (\n    <Filter\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n  const tasksNoun = tasks.length !== 1 ? \"tasks\" : \"task\";\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        task={task.task}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n  return (\n    <div className=\"container app\">\n      <Form onSaveTaskData={addTask}></Form>\n      <div className=\"container\">\n        <div className=\"container\">\n          <div className=\"row mt-2 d-flex justify-content-around\">\n            {filterList}\n          </div>\n        </div>\n      </div>\n\n      <h2 className=\"mt-2\">\n        {taskList.length} {tasksNoun} remaining\n      </h2>\n      <ul className=\"list-unstyled\">{taskList}</ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import $ from \"jquery\";\n// import Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./index.css\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst DUMMYTASKS = [\n  {\n    id: \"t1\",\n    task: \"Eat\",\n    completed: true,\n  },\n  {\n    id: \"t2\",\n    task: \"Sleep\",\n    completed: false,\n  },\n  {\n    id: \"t3\",\n    task: \"Code\",\n    completed: false,\n  },\n  {\n    id: \"t4\",\n    task: \"Repeat\",\n    completed: false,\n  },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DUMMYTASKS} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}